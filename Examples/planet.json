{"version":"0.0.1","author":"NuSan","code":"function len(x,y)\n return sqrt(x*x+y*y)\nend\nfunction normalized(x,y)\n local l=len(x,y)\n return x/l,y/l\nend\nfunction lerp(a,b,c)\n return a*(1-c)+b*c\nend\nfunction rot(x,y,ca,sa)\n return x*ca-y*sa,y*ca+x*sa\nend\n\nfunction drawplayer(x,y,ca,sa,s)\n ca=ca*s\n sa=sa*s\n line(x+ca*0.6+sa,y+sa*0.6-ca,x-sa,y+ca,1)\n line(x-ca*0.6+sa,y-sa*0.6-ca,x-sa,y+ca,1)\n line(x+ca*0.6+sa,y+sa*0.6-ca,x-ca*0.6+sa,y-sa*0.6-ca,1)\n line(x-sa,y+ca,x+sa,y-ca,1)\nend\n\nfunction planetdist(x,y)\n local a=(((atan2(y,x)/(2*pi))%1)*pcount-1)\n local fa=a%1\n a=flr(a)\n local c1=planet[a%pcount+1]\n local c2=planet[(a+1)%pcount+1]\n return lerp(len(c1[1],c1[2]),len(c2[1],c2[2]),fa)\nend\n\nlocal planet={}\nlocal stars={}\nlocal pcount=40\nlocal debuglines={}\n\nlocal started=false\n\nfor i=1,pcount do\n local a=i/pcount*pi*2\n local d=1+rnd(0.5)\n planet[i]={cos(a)*d,sin(a)*d}\nend\nlocal scount=300\nlocal realstarcount=0\nlocal ssize=3.3\nfor j=1,scount do\n local nstar={rnd(ssize*2)-ssize,rnd(ssize*2)-ssize,rnd()+0.1,true}\n local c=planetdist(nstar[1],nstar[2])\n if len(nstar[1],nstar[2])<c then\n  nstar[4]=false\n end\n stars[realstarcount+1]=nstar\n realstarcount = realstarcount+1\nend\nlocal cx,cy,cz,icz=0,0,0.3,1/0.3\nlocal px,py,pa,pca,psa,pvx,pvy=0,2,-pi*0.5,0,-1,1.2,0\nfunction update()\n local t=getTime()\n local dt=getDeltaTime()\n \nif started then\n if btn(0) then pa=pa+2.0*dt end\n if btn(1) then pa=pa-2.0*dt end\n pa = pa%(pi*2)\n pca = cos(pa)\n psa = sin(pa)\n\n local velspeed=0.2\n if btn(2) then\n  pvx = pvx - psa*dt*velspeed\n  pvy = pvy + pca*dt*velspeed\n\n  local expx,expy=px+psa*0.2, py-pca*0.2\n  for i=1,10 do\n   line(expx,expy, px+psa*0.4 + (rnd(2)-1)*0.2, py-pca*0.4 + (rnd(2)-1)*0.2, 0.2)\n  end\n end\n if btn(3) then\n  pvx = pvx + psa*dt*velspeed*0.2\n  pvy = pvy - pca*dt*velspeed*0.2\n  local expx,expy=px+psa*0.2, py-pca*0.2\n  for i=1,10 do\n   local rr=(rnd(2)-1)*0.2\n   local exp2x,exp2y=px-psa*0.2 + (rnd(2)-1)*0.3, py+pca*0.2 + (rnd(2)-1)*0.3\n   line(expx+pca*rr,expy+psa*rr, exp2x, exp2y, 0.2)\n  end\n end\n\n local pdirx,pdiry = -px,-py\n local pdist=len(pdirx,pdiry)\n pdirx,pdiry = pdirx/pdist,pdiry/pdist\n\n local grav=0.5*dt\n pvx = pvx + pdirx*grav\n pvy = pvy + pdiry*grav\n\n --pvx = pvx * 0.999\n --pvy = pvy * 0.999\n\n px = px + pvx*dt\n py = py + pvy*dt\n \n local coldist = planetdist(px,py)\n if pdist<coldist+0.1 then\n  started = false\n  px,py,pa,pca,psa,pvx,pvy=0,2,-pi*0.5,0,-1,1.2,0\n end\n\n cx,cy=lerp(cx,px+pdirx,0.1),lerp(cy,py+pdiry,0.1)\n\nelse\n\n if btnp(2,3) then\n  started = true\n end\n\n cx,cy=lerp(cx,px,0.1),lerp(cy,py,0.1)\n\nend\n\n camera(cx,cy,cz)\n drawplayer(px,py,pca,psa,0.2)\n\n for i=1,pcount do\n  local cur=planet[i]\n  local next=planet[i%pcount+1]\n  line(cur[1],cur[2],next[1],next[2], 0.5)\n end\n local repeatcx = cx-icz\n local repeatcy = cy-icz\n local icz2 = 2*icz\n for j=1,realstarcount do\n  local cur=stars[j]\n  local starx = (cur[1]-repeatcx)%icz2+repeatcx \n  local stary = (cur[2]-repeatcy)%icz2+repeatcy\n  if cur[4] or (abs(starx-cur[1])>0.1 or abs(stary-cur[2])>0.1) then\n   point(starx,stary,cur[3])\n  end\n end\n for k=1,#debuglines do\n  local cur=debuglines[k]\n  line(cur[1][1],cur[1][2],cur[2][1],cur[2][2],1)\n end\nend\n"}