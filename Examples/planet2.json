{"version":"0.0.1","author":"NuSan","code":"function len(x,y)\n return sqrt(x*x+y*y)\nend\nfunction normalized(x,y)\n local l=len(x,y)\n return x/l,y/l\nend\nfunction lerp(a,b,c)\n return a*(1-c)+b*c\nend\nfunction rot(x,y,ca,sa)\n return x*ca-y*sa,y*ca+x*sa\nend\nfunction reflect(rx,ry,nx,ny)\n local dot=rx*nx+ry*ny\n return rx-dot*nx*2,ry-dot*ny*2\nend\n\nfunction drawplayer(x,y,ca,sa,s)\n ca=ca*s\n sa=sa*s\n line(x+ca*0.6+sa,y+sa*0.6-ca,x-sa,y+ca,1)\n line(x-ca*0.6+sa,y-sa*0.6-ca,x-sa,y+ca,1)\n line(x+ca*0.6+sa,y+sa*0.6-ca,x-ca*0.6+sa,y-sa*0.6-ca,1)\n line(x-sa,y+ca,x+sa,y-ca,1)\nend\n\nfunction planetdist(x,y)\n local a=(((atan2(y,x)/(2*pi))%1)*pcount-1)\n local fa=a%1\n a=flr(a)\n local c1=planet[a%pcount+1]\n local c2=planet[(a+1)%pcount+1]\n return lerp(len(c1[1],c1[2]),len(c2[1],c2[2]),fa)\nend\n\nfunction init()\n\n planet={}\n stars={}\n pcount=40\n bullets={}\n asteroids={}\n\n started=false\n\n for i=1,pcount do\n  local a=i/pcount*pi*2\n  local d=1+rnd(0.5)\n  planet[i]={cos(a)*d,sin(a)*d}\n end\n\n scount=300\n realstarcount=0\n ssize=3.3\n for j=1,scount do\n  local nstar={rnd(ssize*2)-ssize,rnd(ssize*2)-ssize,rnd()+0.1,true}\n  local c=planetdist(nstar[1],nstar[2])\n  if len(nstar[1],nstar[2])<c then\n   nstar[4]=false\n  end\n  stars[realstarcount+1]=nstar\n  realstarcount = realstarcount+1\n end\n\n acount=20\n for i=1,acount do\n  local a=i/acount *pi*2\n  local d=4+rnd(1.0)\n  local dx,dy=cos(a),sin(a)\n  local v=rnd(5.0)-2.5\n  asteroids[i] = {dx*d,dy*d,-dy*v,dx*v}\n end\n\n cx,cy,cz,icz=0,0,0.3,1/0.3\n px,py,pa,pca,psa,pvx,pvy=0,2,-pi*0.5,0,-1,1.2,0\nend\ninit()\nfunction update()\n local t=getTime()\n local dt=getDeltaTime()\n \nif started then\n if btn(0) then pa=pa+2.0*dt end\n if btn(1) then pa=pa-2.0*dt end\n pa = pa%(pi*2)\n pca = cos(pa)\n psa = sin(pa)\n\n local velspeed=0.2\n if btn(2) then\n  pvx = pvx - psa*dt*velspeed\n  pvy = pvy + pca*dt*velspeed\n  local expx,expy=px+psa*0.2, py-pca*0.2\n  for i=1,10 do\n   line(expx,expy, px+psa*0.4 + (rnd(2)-1)*0.2, py-pca*0.4 + (rnd(2)-1)*0.2, 0.2)\n  end\n end\n if btn(3) then\n  pvx = pvx + psa*dt*velspeed*0.2\n  pvy = pvy - pca*dt*velspeed*0.2\n  local expx,expy=px+psa*0.2, py-pca*0.2\n  for i=1,10 do\n   local rr=(rnd(2)-1)*0.2\n   local exp2x,exp2y=px-psa*0.2 + (rnd(2)-1)*0.3, py+pca*0.2 + (rnd(2)-1)*0.3\n   line(expx+pca*rr,expy+psa*rr, exp2x, exp2y, 0.2)\n  end\n end\n\n local pdirx,pdiry = -px,-py\n local pdist=len(pdirx,pdiry)\n pdirx,pdiry = pdirx/pdist,pdiry/pdist\n\n local grav=0.5*dt\n pvx = pvx + pdirx*grav\n pvy = pvy + pdiry*grav\n\n --pvx = pvx * 0.999\n --pvy = pvy * 0.999\n\n px = px + pvx*dt\n py = py + pvy*dt\n \n local coldist = planetdist(px,py)\n local needreset=false\n if pdist<coldist+0.1 then\n  needreset=true\n end\n\n for j=1,#asteroids do\n  local cura = asteroids[j]\n  if not cura[5] then\n   local ddx,ddy=abs(cura[1]-px),abs(cura[2]-py)\n   if ddx<0.15 and ddy<0.15 then\n    cura[5] = 0\n    needreset = true\n   end\n  end\n end\n\n if needreset then\n  started = false\n end\n\n cx,cy=lerp(cx,px+pdirx,0.1),lerp(cy,py+pdiry,0.1)\n\n if btnp(4) then\n  bullets[#bullets+1] = {px,py,-psa,pca,1}\n  --pvx = pvx + psa*0.1\n  --pvy = pvy - pca*0.1\n end\n\nelse\n\n for i=0,5 do\n  if btnp(i) then\n   init()\n   started = true\n  end\n end\n\n cx,cy=lerp(cx,0,0.1),lerp(cy,0,0.1)\n\nend\n\n camera(cx,cy,cz)\n drawplayer(px,py,pca,psa,0.2)\n\n for i=1,pcount do\n  local cur=planet[i]\n  local next=planet[i%pcount+1]\n  line(cur[1],cur[2],next[1],next[2], 0.5)\n end\n local repeatcx = cx-icz\n local repeatcy = cy-icz\n local icz2 = 2*icz\n for j=1,realstarcount do\n  local cur=stars[j]\n  local starx = (cur[1]-repeatcx)%icz2+repeatcx \n  local stary = (cur[2]-repeatcy)%icz2+repeatcy\n  if cur[4] or (abs(starx-cur[1])>0.1 or abs(stary-cur[2])>0.1) then\n   point(starx,stary,cur[3])\n  end\n end\n for i=1,acount do\n  local ast=asteroids[i]\n  local death=ast[5]\n  local ax,ay=ast[1],ast[2]\n  local as=0.15\n  local pax,pay=as,0\n  local ares=4\nif not death then\n  for j=0,ares do\n   local aa=pi*2*(j+1)/(ares+1)\n   local cax,cay=cos(aa)*as,sin(aa)*as\n   line(ax+cax,ay+cay,ax+pax,ay+pay,0.6)\n   pax,pay=cax,cay\n  end\nelse\n  if death<1.0 then\n   ast[5] = death+dt\n   for j=0,ares do\n    line(ax,ay,ax+(rnd(2)-1)*0.2,ay+(rnd(2)-1)*0.2,1.0-death)\n   end\n  end\nend\n  if started then\n   local padirx,padiry = normalized(-ax,-ay)\n\n   ast[3] = ast[3] + padirx*0.5*dt\n   ast[4] = ast[4] + padiry*0.5*dt\n\n   ast[1] = ax + ast[3]*dt\n   ast[2] = ay + ast[4]*dt\n\n   if len(ast[1],ast[2])<1.3 then\n    ast[3],ast[4] = reflect(ast[3],ast[4],padirx,padiry)\n    ast[3],ast[4] = ast[3]-padirx,ast[4]-padiry\n   end\n  end\n\n end\n local toremove={}\n for k=1,#bullets do\n  local cur=bullets[k]\n  local bx,by,bvx,bvy,dur=cur[1],cur[2],cur[3],cur[4],cur[5]\n  line(bx,by,bx+bvx*0.2,by+bvy*0.2,dur)\n  cur[1],cur[2] = bx + bvx*dt*5, by + bvy*dt*5\n  cur[5] = dur-dt*0.8\n  for j=1,#asteroids do\n   local cura = asteroids[j]\n   if not cura[5] then\n    local ddx,ddy=abs(cura[1]-bx),abs(cura[2]-by)\n    if ddx<0.15 and ddy<0.15 then\n     cura[5] = 0\n    end\n   end\n  end\n  if cur[5]<0 then\n   toremove[#toremove+1]=k\n  end\n end\n for k=1,#toremove do\n  local bc=#bullets\n  bullets[toremove[k]] = bullets[bc]\n  bullets[bc]=nil\n end\nend\n"}